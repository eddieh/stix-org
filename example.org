#+TITLE: Example Org File
#+DATE: 2020-01-31
#+STARTUP: showall
#+SUBTITLE: Org features, structures, and markup
#+DESCRIPTION: A document that demonstrates almost everything in Org
#+KEYWORDS: org html example demonstration demo sample
#+SETUPFILE: setup.org


* Front Matter

Org files should begin with front matter. The special front matter
comments control many aspects of an Org file. Some special are
rendered when exported, some control meta data, some control how Org
works or set options and configurations. These special comments have
the form =#+NAME: value(s)=


** Title and Date

At the very least an Org document should begin with a title and a
date. For example the first two lines of this file are

#+BEGIN_SRC org
  ,#+TITLE: Example Org File
  ,#+DATE: 2020-01-31
#+END_SRC


* Headings

Headings structure documents into sections and subsections. They begin
with an =*= and the number of asterisks denote the heading level. The
top or first level begins with one asterisks followed by the section
title and the syntax is =* Section Title=. A second level heading begins with
two asterisks followed by the subsection title and the syntax is =**
Subsection Title=.

HTML has only six heading levels, but an Org document can have many
more. In fact Org has 8 heading faces defined, but has a constant
called =org-indent--deepest-level= that implies 50 or more levels are
possible.

#+BEGIN_SRC emacs-lisp
  (defconst org-indent--deepest-level 50
    "Maximum theoretical headline depth.")
#+END_SRC

However, the max export depth is 19.

#+BEGIN_SRC emacs-lisp
  (defconst org-export-max-depth 19
    "Maximum nesting depth for headlines, counting from 0.")
#+END_SRC

Since HTML supports only six levels we'll show that many as an
example. Org will happily create =<hn>= headings for /n/-level
headings with \( n > 6 \).

#+BEGIN_SRC org
  ,* Top or first level headline
  Curabitur blandit tempus ardua ridiculus sed magna.
  ,** Second level
  Me non paenitet nullum festiviorem excogitasse ad hoc.
  ,*** Third level
  Ab illo tempore, ab est sed immemorabili.
  ,**** Forth level
  Sed haec quis possit intrepidus aestimare tellus.
  ,***** Fifth level
  Nihil hic munitissimus habendi senatus locus, nihil horum?
  ,****** Sixth level
  Quae vero auctorem tractata ab fiducia dicuntur.
#+END_SRC

* Top or first level headline
Curabitur blandit tempus ardua ridiculus sed magna.

** Second level
Me non paenitet nullum festiviorem excogitasse ad hoc.

*** Third level
Ab illo tempore, ab est sed immemorabili.

**** Forth level
Sed haec quis possit intrepidus aestimare tellus.

***** Fifth level
Nihil hic munitissimus habendi senatus locus, nihil horum?

****** Sixth level
Quae vero auctorem tractata ab fiducia dicuntur.


* Tables

Tables in Org use a sensible syntax that looks great in plain
text. The tables look even better in HTML thanks to [[https://github.com/gongzhitaao/orgcss][OrgCSS]]. The Org
syntax is self-evident from the example

#+BEGIN_SRC org
  | Name  | Phone | Age |
  |-------+-------+-----|
  | Peter |  1234 |  17 |
  | Anna  |  4321 |  25 |
#+END_SRC

Which produces this table

| Name  | Phone | Age |
|-------+-------+-----|
| Peter |  1234 |  17 |
| Anna  |  4321 |  25 |

Tables without headers are supported too. Just omit the horizontal
divider line.

#+BEGIN_SRC org
  | 2 | 4 |
  | 4 | 2 |
#+END_SRC

Which produces the table

| 2 | 4 |
| 4 | 2 |


* Source Blocks

An Org source block containing an Emacs Lisp function called
=mccarthy91=.

#+BEGIN_SRC org
  ,#+BEGIN_SRC elisp
    (defun mccarthy91 (n)
       "McCarthy 91 is used as a formal verification test case."
       (if (<= n 100)
           (mccarthy91 (mccarthy91 (+ n 11)))
         (- n 10)))
  ,#+END_SRC
#+END_SRC

Renders to HTML like so

#+BEGIN_SRC emacs-lisp
  (defun mccarthy91 (n)
     "McCarthy 91 is used as a formal verification test case."
     (if (<= n 100)
         (mccarthy91 (mccarthy91 (+ n 11)))
       (- n 10)))
#+END_SRC

** Long lines

The next code block is used to check if the styling can display an 80
character lines without overflow. The block is made up of lines
contains the first 80 characters of a base-85 encoding called [[https://rfc.zeromq.org/spec:32/Z85/][Z85]].

#+BEGIN_SRC text
  0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ.-:+=^!/*?&<>()[]{
  0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ.-:+=^!/*?&<>()[]{
  0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ.-:+=^!/*?&<>()[]{
#+END_SRC

Now we must check how a code block that with overflow looks.

#+begin_src objc
  + (nullable NSURL *)URLForResource:(nullable NSString *)name withExtension:(nullable NSString *)ext subdirectory:(nullable NSString *)subpath inBundleWithURL:(NSURL *)bundleURL API_AVAILABLE(macos(10.6), ios(4.0), watchos(2.0), tvos(9.0));
#+end_src


* Formatting

Want something *bold* use =*bold*=. Want something /italic/ use
=/italic/=. Want something _underlined_ use =_underlined_=. Want
something +strikethrough+ use =+strikethrough+=. And lastly, want
something =monospaced= use ~=monospaced=~ or =~monospaced~=.


** Subscripts and Superscripts

Text characters set below or above the line of type for a font/size
combination are necessary for technical writing. Subscripts and
superscripts are achieved in the same way as in TeX or LaTeX.

The radius of the sun is R_{sun} = 6.96 \times 10^{8} m.  On the other
hand, the radius of Alpha Centauri is R_{Alpha Centauri} = 1.28 \times
R_{sun}.


** Special Symbols

There are many special symbols and non-Latin alphabets that can be
inserted in an Org document. The syntax is like TeX or LaTeX too.

Given a circle \Gamma of diameter d, the length of its circumference
is \pi{}d. We can type \alpha as =\alpha=, \beta as =\beta=, and \chi
as =\chi=. If you need a symbol in a word or formula it can be
terminated with a pair of curly braces, so the previous \pi{}d is
achived by typing =\pi{}d=.

Some other symbols include \copy as =\copy=, \dag as =\dag=, and
\times as seen in the subscript/superscript section above as
=\times=. There's \pm as =\pm= or =\plusmn=. There's \frac12 as
=\frac12= and there's \frac34 as =\frac34=. There's x \to \infin,
typed as =x \to \infin=. Don't forget the en dash -- or the em dash
---, respectively =--= and =---=.

Get a list of special symbols with =org-entities-help= or you can add
your own in the variable =org-entities-user=.


* Lists

Some technology that relies on quantum physics include

- Lasers
- Solar cells
- Xerox machines and laser printers
- Transistors
- Integrated circuits
- Digital cameras
- Supercondoctors

Programming languages

1. C
2. Objective-C
3. Python
4. JavaScript
5. Scheme (or LISP)
6. Ruby
7. Shell script

List of lists

- Unordered list items may begin with
  - dash =-=
  - plus =+=
  - asterisk =*=
- Ordered list items may begin with
    - a number followed by a period =1.=
    - a number followed by a parenthesis =1)=

Definition lists

- Proposition :: A statement that is either /true/ or /false/
- True :: Agreement with fact or reality
- False :: Conflicting with fact or reality


* Math

Math (and music) are universal languages. Any system for preparing
documents must provide facilities for writing and displaying math.

The set of natural numbers \( 1, 2, 3, ..., \infty \) is represented
by the symbol \( \mathbb{N} \). The set of itegers \( -\infty, ...,
-2, -1, 0, 1, 2, ..., \infty \) is represented by the symbol \(
\mathbb{Z} \). The letter Z comes from Zahlen, the German word for
numbers.

Here are some properties of integers:

The set \(\mathbb{Z}\) is closed under addition

\[ a, b \in \mathbb{Z} \implies a + b \in \mathbb{Z} \]

The set \(\mathbb{Z}\) is closed under subtraction

\[ a, b \in \mathbb{Z} \implies a - b \in \mathbb{Z} \]

And the set \(\mathbb{Z}\) is closed under multiplication

\[ a, b \in \mathbb{Z} \implies a \times b \in \mathbb{Z} \]


** Notation

Inline math such as \(a^2\) is inserted when \(\LaTeX\) is delimited
by =\(= ... =\)=. Whereas display math is inserted when \(\LaTeX\) is
delimited by =\[= ... =\]=. Consider \(n \ge 1, F_0 = 0, F_1 = 1\),
then we can express a recurrence relation in dispaly math as

\[ F_{n+1} = F_n + F_{n-1} \]






** Logical Proposition

Given a proposition \( P \) and a proposition \( Q \) we can define
some logical modifiers, combinatory terms, and relations using /truth
tables/. We will denote /true/ with a T and /false/ with a F.


*** Defining /Not/

The propisiotn \( P \) and its complement \( \neg P \), read /not P/,
are defined by the truth table:

| \( P \) | \( \neg P \) |
|---------+--------------|
| T       | F            |
| F       | T            |


*** Defining /And/

Given a proposition \( P \) and a proposition \( Q \) the logical
conjunction \( P \land Q \), read /P and Q/, is defined by the truth
table:

| \( P \) | \( Q \) | \( P \land Q \) |
|---------+---------+-----------------|
| T       | T       | T               |
| T       | F       | F               |
| F       | T       | F               |
| F       | F       | F               |


*** Defining /Or/

Given a proposition \( P \) and a proposition \( Q \) the logical
disjunction \( P \lor Q \), read /P or Q/, is defined by the truth
table:

| \( P \) | \( Q \) | \( P \lor Q \) |
|---------+---------+-----------------|
| T       | T       | T               |
| T       | F       | T               |
| F       | T       | T               |
| F       | F       | F               |


*** Defining /Xor/

Given a proposition \( P \) and a proposition \( Q \) the logical
exclusive disjunction \( P \oplus Q \), read /P exlusive or Q/, is
defined by the truth table:

| \( P \) | \( Q \) | \( P \oplus Q \) |
|---------+---------+------------------|
| T       | T       | F                |
| T       | F       | T                |
| F       | T       | T                |
| F       | F       | F                |

/Notation note:/ the symbol \( \veebar \) is an alternative to \(
\oplus \).


** Sums

The following is a summation with index /k/ from 1 to /n/ - 1.

\[ \sum_{k=1}^{n-1} a_k = a_1 + a_2 + a_3 ... + a_{n-1} \]

The following is a summation with index /j/ from 0 to /n/ - 1.

\[ \sum_{j=0}^{n-1} x^j = 1 + x + x^2 + x^3 + ... + x^{n-1} \]
